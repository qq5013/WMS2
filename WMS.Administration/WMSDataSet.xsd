<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="WMSDataSet" targetNamespace="http://tempuri.org/WMSDataSet.xsd" xmlns:mstns="http://tempuri.org/WMSDataSet.xsd" xmlns="http://tempuri.org/WMSDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" GeneratorFunctionsComponentClassName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" UserFunctionsComponentName="QueriesTableAdapter" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection ConnectionStringObject="Data Source=SYMPHONY2;Initial Catalog=WMS;Integrated Security=True" IsAppSettingsProperty="false" Modifier="Assembly" Name="symphony2.WMS.dbo" ParameterPrefix="@" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupUsersTableAdapter" GeneratorDataComponentClassName="GroupUsersTableAdapter" Name="GroupUsers" UserDataComponentName="GroupUsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="symphony2.WMS.dbo" DbObjectName="WMS.dbo.GroupUsers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[GroupUsers] WHERE (([ID] = @Original_ID) AND ([Name] = @Original_Name) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[GroupUsers] ([Name], [Description]) VALUES (@Name, @Description);
SELECT ID, Name, Description FROM GroupUsers WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Name, Description FROM dbo.GroupUsers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[GroupUsers] SET [Name] = @Name, [Description] = @Description WHERE (([ID] = @Original_ID) AND ([Name] = @Original_Name) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)));
SELECT ID, Name, Description FROM GroupUsers WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="WMS.dbo.GroupUsers" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="symphony2.WMS.dbo" DbObjectName="WMS.dbo.GroupUsers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByUserId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByUserId" GeneratorSourceName="FillByUserId" GetMethodModifier="Public" GetMethodName="GetDataByUserId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByUserId" UserSourceName="FillByUserId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT gu.ID,
	   gu.[Name],
	   gu.Description
FROM dbo.Users u 
	INNER JOIN dbo.RelationUserGroupUsers rug ON rug.ID_User = u.ID
	INNER JOIN dbo.GroupUsers gu ON gu.ID = rug.ID_GroupUser
WHERE u.ID = @ID_User
ORDER BY gu.ID
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_User" ColumnName="ID" DataSourceName="WMS.dbo.Users" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@ID_User" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RelationUserGroupUsersTableAdapter" GeneratorDataComponentClassName="RelationUserGroupUsersTableAdapter" Name="RelationUserGroupUsers" UserDataComponentName="RelationUserGroupUsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="symphony2.WMS.dbo" DbObjectName="WMS.dbo.RelationUserGroupUsers" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[RelationUserGroupUsers] WHERE (([ID_GroupUser] = @Original_ID_GroupUser) AND ([ID_User] = @Original_ID_User))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID_GroupUser" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID_GroupUser" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID_User" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID_User" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[RelationUserGroupUsers] ([ID_GroupUser], [ID_User]) VALUES (@ID_GroupUser, @ID_User);
SELECT ID_GroupUser, ID_User FROM RelationUserGroupUsers WHERE (ID_GroupUser = @ID_GroupUser) AND (ID_User = @ID_User)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID_GroupUser" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID_GroupUser" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID_User" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID_User" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID_GroupUser, ID_User FROM dbo.RelationUserGroupUsers</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[RelationUserGroupUsers] SET [ID_GroupUser] = @ID_GroupUser, [ID_User] = @ID_User WHERE (([ID_GroupUser] = @Original_ID_GroupUser) AND ([ID_User] = @Original_ID_User));
SELECT ID_GroupUser, ID_User FROM RelationUserGroupUsers WHERE (ID_GroupUser = @ID_GroupUser) AND (ID_User = @ID_User)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID_GroupUser" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID_GroupUser" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID_User" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID_User" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID_GroupUser" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID_GroupUser" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID_User" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID_User" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_GroupUser" DataSetColumn="ID_GroupUser" />
              <Mapping SourceColumn="ID_User" DataSetColumn="ID_User" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserPermissionsTableAdapter" GeneratorDataComponentClassName="UserPermissionsTableAdapter" Name="UserPermissions" UserDataComponentName="UserPermissionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="symphony2.WMS.dbo" DbObjectName="WMS.dbo.UserPermissions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [UserPermissions] ([ID_ParentMenu], [ID_Menu], [State]) VALUES (@ID_ParentMenu, @ID_Menu, @State)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID_ParentMenu" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID_ParentMenu" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@ID_Menu" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID_Menu" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Boolean" Direction="Input" ParameterName="@State" Precision="0" ProviderType="Bit" Scale="0" Size="0" SourceColumn="State" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT     u1.ID_ParentMenu, u2.ID_Menu, u2.State
FROM         UserPermissions AS u1 INNER JOIN
                      UserPermissions AS u2 ON u2.ID_ParentMenu = u1.ID_Menu AND u2.ID_GroupUsers = @ID_Group
WHERE     (u1.ID_GroupUsers = @ID_Group)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="ID_Group" ColumnName="ID_GroupUsers" DataSourceName="WMS.dbo.UserPermissions" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@ID_Group" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="ID_GroupUsers" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Menu" DataSetColumn="ID_Menu" />
              <Mapping SourceColumn="State" DataSetColumn="State" />
              <Mapping SourceColumn="ID_ParentMenu" DataSetColumn="ID_ParentMenu" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UsersTableAdapter" GeneratorDataComponentClassName="UsersTableAdapter" Name="Users" UserDataComponentName="UsersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="symphony2.WMS.dbo" DbObjectName="WMS.dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Users] WHERE (([ID] = @Original_ID) AND ([Login] = @Original_Login) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT     ID, Login, FirstName, LastName, CASE Active WHEN 1 THEN 'Да' WHEN 0 THEN 'Нет' END AS Active, CAST(0 AS BIT) AS Checked
FROM         Users</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [Users] SET [Login] = @Login, [FirstName] = @FirstName, [LastName] = @LastName WHERE (([ID] = @Original_ID) AND ([Login] = @Original_Login) AND ([FirstName] = @Original_FirstName) AND ([LastName] = @Original_LastName));
SELECT ID, Login, FirstName, LastName, CASE Active WHEN 1 THEN 'Да' WHEN 0 THEN 'Нет' END AS Active, CAST(0 AS BIT) AS Checked FROM Users WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FirstName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@LastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Login" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Login" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FirstName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FirstName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_LastName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="LastName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="WMS.dbo.Users" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Login" DataSetColumn="Login" />
              <Mapping SourceColumn="FirstName" DataSetColumn="FirstName" />
              <Mapping SourceColumn="LastName" DataSetColumn="LastName" />
              <Mapping SourceColumn="Active" DataSetColumn="Active" />
              <Mapping SourceColumn="Checked" DataSetColumn="Checked" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="symphony2.WMS.dbo" DbObjectName="WMS.dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByGroupId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByGroupId" GeneratorSourceName="FillByGroupId" GetMethodModifier="Public" GetMethodName="GetDataByGroupId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByGroupId" UserSourceName="FillByGroupId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     u.FirstName, u.ID, u.LastName, u.Login, CAST(0 AS BIT) AS Checked, CASE Active WHEN 1 THEN 'Да' WHEN 0 THEN 'Нет' END AS Active
FROM         GroupUsers AS gu INNER JOIN
                      RelationUserGroupUsers AS rug ON rug.ID_GroupUser = gu.ID INNER JOIN
                      Users AS u ON u.ID = rug.ID_User
WHERE     (gu.ID = @ID_Group)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_Group" ColumnName="ID" DataSourceName="WMS.dbo.GroupUsers" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@ID_Group" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="symphony2.WMS.dbo" DbObjectName="WMS.dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillFreeAndAsignmentUsers" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataFreeAndAsignmentUsers" GeneratorSourceName="FillFreeAndAsignmentUsers" GetMethodModifier="Public" GetMethodName="GetDataFreeAndAsignmentUsers" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataFreeAndAsignmentUsers" UserSourceName="FillFreeAndAsignmentUsers">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     CAST(0 AS BIT) AS Checked, FirstName, ID, LastName, Login, CASE Active WHEN 1 THEN 'Да' WHEN 0 THEN 'Нет' END AS Active
FROM         Users AS us
WHERE     (ID NOT IN
                          (SELECT     ID_User
                            FROM          RelationUserGroupUsers)) OR
                      (ID IN
                          (SELECT     ID_User
                            FROM          RelationUserGroupUsers AS RelationUserGroupUsers_1
                            WHERE      (ID_GroupUser = @ID_GroupUser)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="ID_GroupUser" ColumnName="" DataSourceName="" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@ID_GroupUser" Precision="0" Scale="0" Size="8" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="symphony2.WMS.dbo" DbObjectName="WMS.dbo.Users" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillFreeUsers" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataFreeUsers" GeneratorSourceName="FillFreeUsers" GetMethodModifier="Public" GetMethodName="GetDataFreeUsers" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataFreeUsers" UserSourceName="FillFreeUsers">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     CAST(0 AS BIT) AS Checked, FirstName, ID, LastName, Login, CASE Active WHEN 1 THEN 'Да' WHEN 0 THEN 'Нет' END AS Active
FROM         Users AS us
WHERE     (ID NOT IN
                          (SELECT     ID_User
                            FROM          RelationUserGroupUsers))</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ListUserSessionsTableAdapter" GeneratorDataComponentClassName="ListUserSessionsTableAdapter" Name="ListUserSessions" UserDataComponentName="ListUserSessionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="symphony2.WMS.dbo" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT us.ID_Session, us.VersionClient, u.[Login], u.LastName + ' ' + u.FirstName AS UserName, CAST(0 as BIT) as Checked
FROM UserSessions us
	INNER JOIN Users u ON u.ID = us.ID_User
WHERE us.ID_Session &lt;&gt; @MySessionId
ORDER BY UserName
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="MySessionId" ColumnName="ID_Session" DataSourceName="WMS.dbo.UserSessions" DataTypeServer="uniqueidentifier" DbType="Guid" Direction="Input" ParameterName="@MySessionId" Precision="0" ProviderType="UniqueIdentifier" Scale="0" Size="16" SourceColumn="ID_Session" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID_Session" DataSetColumn="ID_Session" />
              <Mapping SourceColumn="Login" DataSetColumn="Login" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="Checked" DataSetColumn="Checked" />
              <Mapping SourceColumn="VersionClient" DataSetColumn="VersionClient" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="WMSDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="WMSDataSet" msprop:Generator_UserDSName="WMSDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="GroupUsers" msprop:Generator_TableClassName="GroupUsersDataTable" msprop:Generator_TableVarName="tableGroupUsers" msprop:Generator_TablePropName="GroupUsers" msprop:Generator_RowDeletingName="GroupUsersRowDeleting" msprop:Generator_UserTableName="GroupUsers" msprop:Generator_RowChangingName="GroupUsersRowChanging" msprop:Generator_RowEvHandlerName="GroupUsersRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupUsersRowDeleted" msprop:Generator_RowEvArgName="GroupUsersRowChangeEvent" msprop:Generator_RowChangedName="GroupUsersRowChanged" msprop:Generator_RowClassName="GroupUsersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:long" />
              <xs:element name="Name" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_UserColumnName="Description" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Checked" msprop:Generator_ColumnVarNameInTable="columnChecked" msprop:Generator_ColumnPropNameInRow="Checked" msprop:Generator_ColumnPropNameInTable="CheckedColumn" msprop:Generator_UserColumnName="Checked" type="xs:boolean" default="false" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="RelationUserGroupUsers" msprop:Generator_TableClassName="RelationUserGroupUsersDataTable" msprop:Generator_TableVarName="tableRelationUserGroupUsers" msprop:Generator_TablePropName="RelationUserGroupUsers" msprop:Generator_RowDeletingName="RelationUserGroupUsersRowDeleting" msprop:Generator_UserTableName="RelationUserGroupUsers" msprop:Generator_RowChangingName="RelationUserGroupUsersRowChanging" msprop:Generator_RowEvHandlerName="RelationUserGroupUsersRowChangeEventHandler" msprop:Generator_RowDeletedName="RelationUserGroupUsersRowDeleted" msprop:Generator_RowEvArgName="RelationUserGroupUsersRowChangeEvent" msprop:Generator_RowChangedName="RelationUserGroupUsersRowChanged" msprop:Generator_RowClassName="RelationUserGroupUsersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_GroupUser" msprop:Generator_ColumnVarNameInTable="columnID_GroupUser" msprop:Generator_ColumnPropNameInRow="ID_GroupUser" msprop:Generator_ColumnPropNameInTable="ID_GroupUserColumn" msprop:Generator_UserColumnName="ID_GroupUser" type="xs:long" />
              <xs:element name="ID_User" msprop:Generator_ColumnVarNameInTable="columnID_User" msprop:Generator_ColumnPropNameInRow="ID_User" msprop:Generator_ColumnPropNameInTable="ID_UserColumn" msprop:Generator_UserColumnName="ID_User" type="xs:long" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserPermissions" msprop:Generator_TableClassName="UserPermissionsDataTable" msprop:Generator_TableVarName="tableUserPermissions" msprop:Generator_TablePropName="UserPermissions" msprop:Generator_RowDeletingName="UserPermissionsRowDeleting" msprop:Generator_UserTableName="UserPermissions" msprop:Generator_RowChangingName="UserPermissionsRowChanging" msprop:Generator_RowEvHandlerName="UserPermissionsRowChangeEventHandler" msprop:Generator_RowDeletedName="UserPermissionsRowDeleted" msprop:Generator_RowEvArgName="UserPermissionsRowChangeEvent" msprop:Generator_RowChangedName="UserPermissionsRowChanged" msprop:Generator_RowClassName="UserPermissionsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Menu" msprop:Generator_ColumnVarNameInTable="columnID_Menu" msprop:Generator_ColumnPropNameInRow="ID_Menu" msprop:Generator_ColumnPropNameInTable="ID_MenuColumn" msprop:Generator_UserColumnName="ID_Menu" type="xs:long" minOccurs="0" />
              <xs:element name="State" msprop:Generator_ColumnVarNameInTable="columnState" msprop:Generator_ColumnPropNameInRow="State" msprop:Generator_ColumnPropNameInTable="StateColumn" msprop:Generator_UserColumnName="State" type="xs:boolean" minOccurs="0" />
              <xs:element name="ID_ParentMenu" msprop:Generator_ColumnVarNameInTable="columnID_ParentMenu" msprop:Generator_ColumnPropNameInRow="ID_ParentMenu" msprop:Generator_ColumnPropNameInTable="ID_ParentMenuColumn" msprop:Generator_UserColumnName="ID_ParentMenu" type="xs:long" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Users" msprop:Generator_TableClassName="UsersDataTable" msprop:Generator_TableVarName="tableUsers" msprop:Generator_TablePropName="Users" msprop:Generator_RowDeletingName="UsersRowDeleting" msprop:Generator_UserTableName="Users" msprop:Generator_RowChangingName="UsersRowChanging" msprop:Generator_RowEvHandlerName="UsersRowChangeEventHandler" msprop:Generator_RowDeletedName="UsersRowDeleted" msprop:Generator_RowEvArgName="UsersRowChangeEvent" msprop:Generator_RowChangedName="UsersRowChanged" msprop:Generator_RowClassName="UsersRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:long" />
              <xs:element name="Login" msprop:Generator_ColumnVarNameInTable="columnLogin" msprop:Generator_ColumnPropNameInRow="Login" msprop:Generator_ColumnPropNameInTable="LoginColumn" msprop:Generator_UserColumnName="Login">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FirstName" msprop:Generator_ColumnVarNameInTable="columnFirstName" msprop:Generator_ColumnPropNameInRow="FirstName" msprop:Generator_ColumnPropNameInTable="FirstNameColumn" msprop:Generator_UserColumnName="FirstName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LastName" msprop:Generator_ColumnVarNameInTable="columnLastName" msprop:Generator_ColumnPropNameInRow="LastName" msprop:Generator_ColumnPropNameInTable="LastNameColumn" msprop:Generator_UserColumnName="LastName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Active" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnActive" msprop:Generator_ColumnPropNameInRow="Active" msprop:Generator_ColumnPropNameInTable="ActiveColumn" msprop:Generator_UserColumnName="Active" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Checked" msprop:Generator_ColumnVarNameInTable="columnChecked" msprop:Generator_ColumnPropNameInRow="Checked" msprop:Generator_ColumnPropNameInTable="CheckedColumn" msprop:Generator_UserColumnName="Checked" type="xs:boolean" default="false" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ListUserSessions" msprop:Generator_TableClassName="ListUserSessionsDataTable" msprop:Generator_TableVarName="tableListUserSessions" msprop:Generator_TablePropName="ListUserSessions" msprop:Generator_RowDeletingName="ListUserSessionsRowDeleting" msprop:Generator_UserTableName="ListUserSessions" msprop:Generator_RowChangingName="ListUserSessionsRowChanging" msprop:Generator_RowEvHandlerName="ListUserSessionsRowChangeEventHandler" msprop:Generator_RowDeletedName="ListUserSessionsRowDeleted" msprop:Generator_RowEvArgName="ListUserSessionsRowChangeEvent" msprop:Generator_RowChangedName="ListUserSessionsRowChanged" msprop:Generator_RowClassName="ListUserSessionsRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID_Session" msdata:DataType="System.Guid, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnID_Session" msprop:Generator_ColumnPropNameInRow="ID_Session" msprop:Generator_ColumnPropNameInTable="ID_SessionColumn" msprop:Generator_UserColumnName="ID_Session" type="xs:string" />
              <xs:element name="Login" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnLogin" msprop:Generator_ColumnPropNameInRow="Login" msprop:Generator_ColumnPropNameInTable="LoginColumn" msprop:Generator_UserColumnName="Login">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserName" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnUserName" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn" msprop:Generator_UserColumnName="UserName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="101" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Checked" msprop:Generator_ColumnVarNameInTable="columnChecked" msprop:Generator_ColumnPropNameInRow="Checked" msprop:Generator_ColumnPropNameInTable="CheckedColumn" msprop:Generator_UserColumnName="Checked" type="xs:boolean" minOccurs="0" />
              <xs:element name="VersionClient" msprop:Generator_ColumnVarNameInTable="columnVersionClient" msprop:Generator_ColumnPropNameInRow="VersionClient" msprop:Generator_ColumnPropNameInTable="VersionClientColumn" msprop:Generator_UserColumnName="VersionClient" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:RelationUserGroupUsers" />
      <xs:field xpath="mstns:ID_GroupUser" />
      <xs:field xpath="mstns:ID_User" />
    </xs:unique>
    <xs:unique name="ListUserSessions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ListUserSessions" />
      <xs:field xpath="mstns:ID_Session" />
    </xs:unique>
  </xs:element>
</xs:schema>